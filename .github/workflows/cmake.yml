name: Build & Test
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  BUILD_TYPE: Debug

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++"
          }
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Python
      run: sudo apt-get install python3 python3-pip -y
      
    - name: Install Conan
      run: pip3 install "conan<2" && conan profile new default --detect && conan profile update settings.compiler.libcxx=libstdc++11 default
      
    - name: Install + Configure GTest
      run: mkdir build && cd build && conan install ..

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Install lcov
      run: sudo apt-get install perl libdatetime-perl libcapture-tiny-perl libdatetime-format-dateparse-perl -y && wget https://github.com/linux-test-project/lcov/releases/download/v2.0/lcov-2.0.tar.gz -O lcov-2.0.tar.gz && tar -xf lcov-2.0.tar.gz && cd lcov-2.0 && sudo make install

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest --progress && lcov -c -d . -o main_coverage.info
      
    - name: Publish coverage report to coveralls.io   
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} 
        files: build/main_coverage.info
        format: lcov

